/*
 * marvelcomics_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/25/2016
 */

package models_pkg

import "time"

/*
 * Structure for the custom type ComicDataWrapper
 */
type ComicDataWrapper struct {
    Code            int64           `json:"code" form:"code"` //The HTTP status code of the returned result.
    Status          string          `json:"status" form:"status"` //A string description of the call status.
    Copyright       string          `json:"copyright" form:"copyright"` //The copyright notice for the returned result.
    AttributionText string          `json:"attributionText" form:"attributionText"` //The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
    AttributionHTML string          `json:"attributionHTML" form:"attributionHTML"` //An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
    Data            ComicDataContainer `json:"data" form:"data"` //The results returned by the call.
    Etag            string          `json:"etag" form:"etag"` //A digest value of the content returned by the call.
}

/*
 * Structure for the custom type ComicDataContainer
 */
type ComicDataContainer struct {
    Offset          int64           `json:"offset" form:"offset"` //The requested offset (number of skipped results) of the call.
    Limit           int64           `json:"limit" form:"limit"` //The requested result limit.
    Total           int64           `json:"total" form:"total"` //The total number of resources available given the current filter set.
    Count           int64           `json:"count" form:"count"` //The total number of results returned by this call.
    Results         []*Comic        `json:"results" form:"results"` //The list of comics returned by the call
}

/*
 * Structure for the custom type Comic
 */
type Comic struct {
    Id                 int64           `json:"id" form:"id"` //The unique ID of the comic resource.
    DigitalId          int64           `json:"digitalId" form:"digitalId"` //The ID of the digital comic representation of this comic. Will be 0 if the comic is not available digitally.
    Title              string          `json:"title" form:"title"` //The canonical title of the comic.
    IssueNumber        int64           `json:"issueNumber" form:"issueNumber"` //The number of the issue in the series (will generally be 0 for collection formats).
    VariantDescription string          `json:"variantDescription" form:"variantDescription"` //If the issue is a variant (e.g. an alternate cover, second printing, or directorâ€™s cut), a text description of the variant.
    Description        string          `json:"description" form:"description"` //The preferred description of the comic.
    Modified           *time.Time      `json:"modified" form:"modified"` //The date the resource was most recently modified.
    Isbn               string          `json:"isbn" form:"isbn"` //The ISBN for the comic (generally only populated for collection formats).
    Upc                string          `json:"upc" form:"upc"` //The UPC barcode number for the comic (generally only populated for periodical formats).
    DiamondCode        string          `json:"diamondCode" form:"diamondCode"` //The Diamond code for the comic.
    Ean                string          `json:"ean" form:"ean"` //The EAN barcode for the comic.
    Issn               string          `json:"issn" form:"issn"` //The ISSN barcode for the comic.
    Format             string          `json:"format" form:"format"` //The publication format of the comic e.g. comic, hardcover, trade paperback.
    PageCount          int64           `json:"pageCount" form:"pageCount"` //The number of story pages in the comic.
    TextObjects        []*TextObject   `json:"textObjects" form:"textObjects"` //A set of descriptive text blurbs for the comic.
    ResourceURI        string          `json:"resourceURI" form:"resourceURI"` //The canonical URL identifier for this resource.
    Urls               []*UrlModel     `json:"urls" form:"urls"` //A set of public web site URLs for the resource.
    Series             SeriesSummary   `json:"series" form:"series"` //A summary representation of the series to which this comic belongs.
    Variants           []*ComicSummary `json:"variants" form:"variants"` //A list of variant issues for this comic (includes the "original" issue if the current issue is a variant).
    Collections        []*ComicSummary `json:"collections" form:"collections"` //A list of collections which include this comic (will generally be empty if the comic's format is a collection).
    CollectedIssues    []*ComicSummary `json:"collectedIssues" form:"collectedIssues"` //A list of issues collected in this comic (will generally be empty for periodical formats such as "comic" or "magazine").
    Dates              []*ComicDate    `json:"dates" form:"dates"` //A list of key dates for this comic.
    Prices             []*ComicPrice   `json:"prices" form:"prices"` //A list of prices for this comic.
    Thumbnail          Thumbnail       `json:"thumbnail" form:"thumbnail"` //The representative image for this comic.
    Images             []*Image        `json:"images" form:"images"` //A list of promotional images associated with this comic.
    Creators           CreatorList     `json:"creators" form:"creators"` //A resource list containing the creators associated with this comic.
    Characters         CharacterList   `json:"characters" form:"characters"` //A resource list containing the characters which appear in this comic.
    Stories            StoryList       `json:"stories" form:"stories"` //A resource list containing the stories which appear in this comic.
    Events             EventList       `json:"events" form:"events"` //A resource list containing the events in which this comic appears.
}

/*
 * Structure for the custom type TextObject
 */
type TextObject struct {
    Type            string          `json:"type" form:"type"` //The canonical type of the text object (e.g. solicit text, preview text, etc.).
    Language        string          `json:"language" form:"language"` //The IETF language tag denoting the language the text object is written in.
    Text            string          `json:"text" form:"text"` //The text.
}

/*
 * Structure for the custom type UrlModel
 */
type UrlModel struct {
    Type            string          `json:"type" form:"type"` //A text identifier for the URL.
    Url             string          `json:"url" form:"url"` //A full URL (including scheme, domain, and path).
}

/*
 * Structure for the custom type SeriesSummary
 */
type SeriesSummary struct {
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The path to the individual series resource.
    Name            string          `json:"name" form:"name"` //The canonical name of the series.
}

/*
 * Structure for the custom type ComicSummary
 */
type ComicSummary struct {
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The path to the individual comic resource.
    Name            string          `json:"name" form:"name"` //The canonical name of the comic.
}

/*
 * Structure for the custom type ComicDate
 */
type ComicDate struct {
    Type            string          `json:"type" form:"type"` //A description of the date (e.g. onsale date, FOC date).
    Date            *time.Time      `json:"date" form:"date"` //The date.
}

/*
 * Structure for the custom type ComicPrice
 */
type ComicPrice struct {
    Type            string          `json:"type" form:"type"` //A description of the price (e.g. print price, digital price).
    Price           float64         `json:"price" form:"price"` //The price (all prices in USD).
}

/*
 * Structure for the custom type Thumbnail
 */
type Thumbnail struct {
    Path            string          `json:"path" form:"path"` //TODO: Write general description for this field
    Extension       string          `json:"extension" form:"extension"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type Image
 */
type Image struct {
    Path            string          `json:"path" form:"path"` //The directory path of to the image.
    Extension       string          `json:"extension" form:"extension"` //The file extension for the image.
}

/*
 * Structure for the custom type CreatorList
 */
type CreatorList struct {
    Available       int64           `json:"available" form:"available"` //The number of total available creators in this list. Will always be greater than or equal to the "returned" value.
    Returned        int64           `json:"returned" form:"returned"` //The number of creators returned in this collection (up to 20).
    CollectionURI   string          `json:"collectionURI" form:"collectionURI"` //The path to the full list of creators in this collection.
    Items           []*CreatorSummary `json:"items" form:"items"` //The list of returned creators in this collection.
}

/*
 * Structure for the custom type CreatorSummary
 */
type CreatorSummary struct {
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The path to the individual creator resource.
    Name            string          `json:"name" form:"name"` //The full name of the creator.
    Role            string          `json:"role" form:"role"` //The role of the creator in the parent entity.
}

/*
 * Structure for the custom type CharacterList
 */
type CharacterList struct {
    Available       int64           `json:"available" form:"available"` //The number of total available characters in this list. Will always be greater than or equal to the "returned" value.
    Returned        int64           `json:"returned" form:"returned"` //The number of characters returned in this collection (up to 20).
    CollectionURI   string          `json:"collectionURI" form:"collectionURI"` //The path to the full list of characters in this collection.
    Items           []*CharacterSummary `json:"items" form:"items"` //The list of returned characters in this collection.
}

/*
 * Structure for the custom type CharacterSummary
 */
type CharacterSummary struct {
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The path to the individual character resource.
    Name            string          `json:"name" form:"name"` //The full name of the character.
    Role            string          `json:"role" form:"role"` //The role of the creator in the parent entity.
}

/*
 * Structure for the custom type StoryList
 */
type StoryList struct {
    Available       int64           `json:"available" form:"available"` //The number of total available stories in this list. Will always be greater than or equal to the "returned" value.
    Returned        int64           `json:"returned" form:"returned"` //The number of stories returned in this collection (up to 20).
    CollectionURI   string          `json:"collectionURI" form:"collectionURI"` //The path to the full list of stories in this collection.
    Items           []*StorySummary `json:"items" form:"items"` //The list of returned stories in this collection.
}

/*
 * Structure for the custom type StorySummary
 */
type StorySummary struct {
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The path to the individual story resource.
    Name            string          `json:"name" form:"name"` //The canonical name of the story.
    Type            string          `json:"type" form:"type"` //The type of the story (interior or cover).
}

/*
 * Structure for the custom type EventList
 */
type EventList struct {
    Available       int64           `json:"available" form:"available"` //The number of total available events in this list. Will always be greater than or equal to the "returned" value.
    Returned        int64           `json:"returned" form:"returned"` //The number of events returned in this collection (up to 20).
    CollectionURI   string          `json:"collectionURI" form:"collectionURI"` //The path to the full list of events in this collection.
    Items           []*EventSummary `json:"items" form:"items"` //The list of returned events in this collection.
}

/*
 * Structure for the custom type EventSummary
 */
type EventSummary struct {
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The path to the individual event resource.
    Name            string          `json:"name" form:"name"` //The name of the event.
}

/*
 * Structure for the custom type EventDataWrapper
 */
type EventDataWrapper struct {
    Code            int64           `json:"code" form:"code"` //The HTTP status code of the returned result.
    Status          string          `json:"status" form:"status"` //A string description of the call status.
    Copyright       string          `json:"copyright" form:"copyright"` //The copyright notice for the returned result.
    AttributionText string          `json:"attributionText" form:"attributionText"` //The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
    AttributionHTML string          `json:"attributionHTML" form:"attributionHTML"` //An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
    Data            EventDataContainer `json:"data" form:"data"` //The results returned by the call.
    Etag            string          `json:"etag" form:"etag"` //A digest value of the content returned by the call.
}

/*
 * Structure for the custom type EventDataContainer
 */
type EventDataContainer struct {
    Offset          int64           `json:"offset" form:"offset"` //The requested offset (number of skipped results) of the call.
    Limit           int64           `json:"limit" form:"limit"` //The requested result limit.
    Total           int64           `json:"total" form:"total"` //The total number of resources available given the current filter set.
    Count           int64           `json:"count" form:"count"` //The total number of results returned by this call.
    Results         []*Event        `json:"results" form:"results"` //The list of events returned by the call
}

/*
 * Structure for the custom type Event
 */
type Event struct {
    Id              int64           `json:"id" form:"id"` //The unique ID of the event resource.
    Title           string          `json:"title" form:"title"` //The title of the event.
    Description     string          `json:"description" form:"description"` //A description of the event.
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The canonical URL identifier for this resource.
    Urls            []*UrlModel     `json:"urls" form:"urls"` //A set of public web site URLs for the event.
    Modified        *time.Time      `json:"modified" form:"modified"` //The date the resource was most recently modified.
    Start           *time.Time      `json:"start" form:"start"` //The date of publication of the first issue in this event.
    End             *time.Time      `json:"end" form:"end"` //The date of publication of the last issue in this event.
    Thumbnail       Thumbnail       `json:"thumbnail" form:"thumbnail"` //The representative image for this event.
    Comics          ComicList       `json:"comics" form:"comics"` //A resource list containing the comics in this event.
    Stories         StoryList       `json:"stories" form:"stories"` //A resource list containing the stories in this event.
    Series          SeriesList      `json:"series" form:"series"` //A resource list containing the series in this event.
    Characters      CharacterList   `json:"characters" form:"characters"` //A resource list containing the characters which appear in this event.
    Creators        CreatorList     `json:"creators" form:"creators"` //A resource list containing creators whose work appears in this event.
    Next            EventSummary    `json:"next" form:"next"` //A summary representation of the event which follows this event.
    Previous        EventSummary    `json:"previous" form:"previous"` //A summary representation of the event which preceded this event.
}

/*
 * Structure for the custom type ComicList
 */
type ComicList struct {
    Available       int64           `json:"available" form:"available"` //The number of total available issues in this list. Will always be greater than or equal to the "returned" value.
    Returned        int64           `json:"returned" form:"returned"` //The number of issues returned in this collection (up to 20).
    CollectionURI   string          `json:"collectionURI" form:"collectionURI"` //The path to the full list of issues in this collection.
    Items           []*ComicSummary `json:"items" form:"items"` //The list of returned issues in this collection.
}

/*
 * Structure for the custom type SeriesList
 */
type SeriesList struct {
    Available       int64           `json:"available" form:"available"` //The number of total available series in this list. Will always be greater than or equal to the "returned" value.
    Returned        int64           `json:"returned" form:"returned"` //The number of series returned in this collection (up to 20).
    CollectionURI   string          `json:"collectionURI" form:"collectionURI"` //The path to the full list of series in this collection.
    Items           []*SeriesSummary `json:"items" form:"items"` //The list of returned series in this collection.
}

/*
 * Structure for the custom type SeriesDataWrapper
 */
type SeriesDataWrapper struct {
    Code            int64           `json:"code" form:"code"` //The HTTP status code of the returned result.
    Status          string          `json:"status" form:"status"` //A string description of the call status.
    Copyright       string          `json:"copyright" form:"copyright"` //The copyright notice for the returned result.
    AttributionText string          `json:"attributionText" form:"attributionText"` //The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
    AttributionHTML string          `json:"attributionHTML" form:"attributionHTML"` //An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
    Data            SeriesDataContainer `json:"data" form:"data"` //The results returned by the call.
    Etag            string          `json:"etag" form:"etag"` //A digest value of the content returned by the call.
}

/*
 * Structure for the custom type SeriesDataContainer
 */
type SeriesDataContainer struct {
    Offset          int64           `json:"offset" form:"offset"` //The requested offset (number of skipped results) of the call.
    Limit           int64           `json:"limit" form:"limit"` //The requested result limit.
    Total           int64           `json:"total" form:"total"` //The total number of resources available given the current filter set.
    Count           int64           `json:"count" form:"count"` //The total number of results returned by this call.
    Results         []*Series       `json:"results" form:"results"` //The list of series returned by the call
}

/*
 * Structure for the custom type Series
 */
type Series struct {
    Id              int64           `json:"id" form:"id"` //The unique ID of the series resource.
    Title           string          `json:"title" form:"title"` //The canonical title of the series.
    Description     string          `json:"description" form:"description"` //A description of the series.
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The canonical URL identifier for this resource.
    Urls            []*UrlModel     `json:"urls" form:"urls"` //A set of public web site URLs for the resource.
    StartYear       int64           `json:"startYear" form:"startYear"` //The first year of publication for the series.
    EndYear         int64           `json:"endYear" form:"endYear"` //The last year of publication for the series (conventionally, 2099 for ongoing series) .
    Rating          string          `json:"rating" form:"rating"` //The age-appropriateness rating for the series.
    Modified        *time.Time      `json:"modified" form:"modified"` //The date the resource was most recently modified.
    Thumbnail       Thumbnail       `json:"thumbnail" form:"thumbnail"` //The representative image for this series.
    Comics          ComicList       `json:"comics" form:"comics"` //A resource list containing comics in this series.
    Stories         StoryList       `json:"stories" form:"stories"` //A resource list containing stories which occur in comics in this series.
    Events          EventList       `json:"events" form:"events"` //A resource list containing events which take place in comics in this series.
    Characters      CharacterList   `json:"characters" form:"characters"` //A resource list containing characters which appear in comics in this series.
    Creators        CreatorList     `json:"creators" form:"creators"` //A resource list of creators whose work appears in comics in this series.
    Next            SeriesSummary   `json:"next" form:"next"` //A summary representation of the series which follows this series.
    Previous        SeriesSummary   `json:"previous" form:"previous"` //A summary representation of the series which preceded this series.
}

/*
 * Structure for the custom type StoryDataWrapper
 */
type StoryDataWrapper struct {
    Code            int64           `json:"code" form:"code"` //The HTTP status code of the returned result.
    Status          string          `json:"status" form:"status"` //A string description of the call status.
    Copyright       string          `json:"copyright" form:"copyright"` //The copyright notice for the returned result.
    AttributionText string          `json:"attributionText" form:"attributionText"` //The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
    AttributionHTML string          `json:"attributionHTML" form:"attributionHTML"` //An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
    Data            StoryDataContainer `json:"data" form:"data"` //The results returned by the call.
    Etag            string          `json:"etag" form:"etag"` //A digest value of the content returned by the call.
}

/*
 * Structure for the custom type StoryDataContainer
 */
type StoryDataContainer struct {
    Offset          int64           `json:"offset" form:"offset"` //The requested offset (number of skipped results) of the call.
    Limit           int64           `json:"limit" form:"limit"` //The requested result limit.
    Total           int64           `json:"total" form:"total"` //The total number of resources available given the current filter set.
    Count           int64           `json:"count" form:"count"` //The total number of results returned by this call.
    Results         []*Story        `json:"results" form:"results"` //The list of stories returned by the call
}

/*
 * Structure for the custom type Story
 */
type Story struct {
    Id              int64           `json:"id" form:"id"` //The unique ID of the story resource.
    Title           string          `json:"title" form:"title"` //The story title.
    Description     string          `json:"description" form:"description"` //A short description of the story.
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The canonical URL identifier for this resource.
    Type            string          `json:"type" form:"type"` //The story type e.g. interior story, cover, text story.
    Modified        *time.Time      `json:"modified" form:"modified"` //The date the resource was most recently modified.
    Thumbnail       Thumbnail       `json:"thumbnail" form:"thumbnail"` //The representative image for this story.
    Comics          ComicList       `json:"comics" form:"comics"` //A resource list containing comics in which this story takes place.
    Series          SeriesList      `json:"series" form:"series"` //A resource list containing series in which this story appears.
    Events          EventList       `json:"events" form:"events"` //A resource list of the events in which this story appears.
    Characters      CharacterList   `json:"characters" form:"characters"` //A resource list of characters which appear in this story.
    Creators        CreatorList     `json:"creators" form:"creators"` //A resource list of creators who worked on this story.
    Originalissue   ComicSummary    `json:"originalissue" form:"originalissue"` //A summary representation of the issue in which this story was originally published.
}

/*
 * Structure for the custom type Character
 */
type Character struct {
    Id              int64           `json:"id" form:"id"` //The unique ID of the character resource.
    Name            string          `json:"name" form:"name"` //The name of the character.
    Description     string          `json:"description" form:"description"` //A short bio or description of the character.
    Modified        *time.Time      `json:"modified" form:"modified"` //The date the resource was most recently modified.
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The canonical URL identifier for this resource.
    Urls            []*UrlModel     `json:"urls" form:"urls"` //A set of public web site URLs for the resource.
    Thumbnail       Thumbnail       `json:"thumbnail" form:"thumbnail"` //The representative image for this character.
    Comics          ComicList       `json:"comics" form:"comics"` //A resource list containing comics which feature this character.
    Stories         StoryList       `json:"stories" form:"stories"` //A resource list of stories in which this character appears.
    Events          EventList       `json:"events" form:"events"` //A resource list of events in which this character appears.
    Series          SeriesList      `json:"series" form:"series"` //A resource list of series in which this character appears.
}

/*
 * Structure for the custom type CharacterDataWrapper
 */
type CharacterDataWrapper struct {
    Code            int64           `json:"code" form:"code"` //The HTTP status code of the returned result.
    Status          string          `json:"status" form:"status"` //A string description of the call status.
    Copyright       string          `json:"copyright" form:"copyright"` //The copyright notice for the returned result.
    AttributionText string          `json:"attributionText" form:"attributionText"` //The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
    AttributionHTML string          `json:"attributionHTML" form:"attributionHTML"` //An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
    Data            CharacterDataContainer `json:"data" form:"data"` //The results returned by the call.
    Etag            string          `json:"etag" form:"etag"` //A digest value of the content returned by the call.
}

/*
 * Structure for the custom type CharacterDataContainer
 */
type CharacterDataContainer struct {
    Offset          int64           `json:"offset" form:"offset"` //The requested offset (number of skipped results) of the call.
    Limit           int64           `json:"limit" form:"limit"` //The requested result limit.
    Total           int64           `json:"total" form:"total"` //The total number of resources available given the current filter set.
    Count           int64           `json:"count" form:"count"` //The total number of results returned by this call.
    Results         []*Character    `json:"results" form:"results"` //The list of characters returned by the call.
}

/*
 * Structure for the custom type CreatorDataWrapper
 */
type CreatorDataWrapper struct {
    Code            int64           `json:"code" form:"code"` //The HTTP status code of the returned result.
    Status          string          `json:"status" form:"status"` //A string description of the call status.
    Copyright       string          `json:"copyright" form:"copyright"` //The copyright notice for the returned result.
    AttributionText string          `json:"attributionText" form:"attributionText"` //The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
    AttributionHTML string          `json:"attributionHTML" form:"attributionHTML"` //An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
    Data            CreatorDataContainer `json:"data" form:"data"` //The results returned by the call.
    Etag            string          `json:"etag" form:"etag"` //A digest value of the content returned by the call.
}

/*
 * Structure for the custom type CreatorDataContainer
 */
type CreatorDataContainer struct {
    Offset          int64           `json:"offset" form:"offset"` //The requested offset (number of skipped results) of the call.
    Limit           int64           `json:"limit" form:"limit"` //The requested result limit.
    Total           int64           `json:"total" form:"total"` //The total number of resources available given the current filter set.
    Count           int64           `json:"count" form:"count"` //The total number of results returned by this call.
    Results         []*Creator      `json:"results" form:"results"` //The list of creators returned by the call.
}

/*
 * Structure for the custom type Creator
 */
type Creator struct {
    Id              int64           `json:"id" form:"id"` //The unique ID of the creator resource.
    FirstName       string          `json:"firstName" form:"firstName"` //The first name of the creator.
    MiddleName      string          `json:"middleName" form:"middleName"` //The middle name of the creator.
    LastName        string          `json:"lastName" form:"lastName"` //The last name of the creator.
    Suffix          string          `json:"suffix" form:"suffix"` //The suffix or honorific for the creator.
    FullName        string          `json:"fullName" form:"fullName"` //The full name of the creator (a space-separated concatenation of the above four fields).
    Modified        *time.Time      `json:"modified" form:"modified"` //The date the resource was most recently modified.
    ResourceURI     string          `json:"resourceURI" form:"resourceURI"` //The canonical URL identifier for this resource.
    Urls            []*UrlModel     `json:"urls" form:"urls"` //A set of public web site URLs for the resource.
    Thumbnail       Thumbnail       `json:"thumbnail" form:"thumbnail"` //The representative image for this creator.
    Series          SeriesList      `json:"series" form:"series"` //A resource list containing the series which feature work by this creator.
    Stories         StoryList       `json:"stories" form:"stories"` //A resource list containing the stories which feature work by this creator.
    Comics          ComicList       `json:"comics" form:"comics"` //A resource list containing the comics which feature work by this creator.
    Events          EventList       `json:"events" form:"events"` //A resource list containing the events which feature work by this creator.
}
