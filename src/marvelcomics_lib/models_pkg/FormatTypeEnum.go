/*
 * marvelcomics_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/25/2016
 */
package models_pkg

import(
	"encoding/json"
)

/**
 * Type definition for FormatTypeEnum enum
 */
type FormatTypeEnum int

/**
 * Value collection for FormatTypeEnum enum
 */
const (
    FormatTypeEnum_COLLECTION FormatTypeEnum = 1 + iota
    FormatTypeEnum_COMIC
)

func (r FormatTypeEnum) MarshalJSON() ([]byte, error) { 
	s := FormatTypeEnumToValue(r)
 	return json.Marshal(s) 
} 

func (r *FormatTypeEnum) UnmarshalJSON(data []byte) error { 
 	var s string 
 	json.Unmarshal(data, &s)
 	v :=  FormatTypeEnumFromValue(s)
 	*r = v 
 	return nil 
 } 


/**
 * Converts FormatTypeEnum to its string representation
 */
func FormatTypeEnumToValue(formatTypeEnum FormatTypeEnum) string {
	switch formatTypeEnum {
		case FormatTypeEnum_COLLECTION:
			return "collection"		
		case FormatTypeEnum_COMIC:
			return "comic"		
        default:
        	return "collection"
	}
}

/**
 * Converts FormatTypeEnum Array to its string Array representation
*/
func FormatTypeEnumArrayToValue(formatTypeEnum []FormatTypeEnum) []string {
	convArray := make([]string,len( formatTypeEnum))
	for i:=0; i<len(formatTypeEnum);i++ {
		convArray[i] = FormatTypeEnumToValue(formatTypeEnum[i])
	}
	return convArray
}


/**
 * Converts given value to its enum representation
 */
func FormatTypeEnumFromValue(value string) FormatTypeEnum {
	switch value {
		case "collection":
			return FormatTypeEnum_COLLECTION
		case "comic":
			return FormatTypeEnum_COMIC
        default:
            return FormatTypeEnum_COLLECTION
	}
}
